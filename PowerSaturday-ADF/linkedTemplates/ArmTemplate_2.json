{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "PowerSaturday-ADF"
		},
		"10Min_properties_Generic SCD Type1_parameters_tableName": {
			"type": "string",
			"defaultValue": "Product"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Master_Co2Impact')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DF_SatelliteDatas",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "EP - AWS - PullS3 - co2impact",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_SatelliteDatas",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SatelliteCo2": {},
									"DestDimAnalyticsAxis": {
										"TableName": "SatelliteData",
										"TableSchema": "dbo"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					},
					{
						"name": "EP - AWS - PullS3 - co2impact",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "AWS - PullS3",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"KeyVaultUrl": "https://powersaturdayakv.vault.azure.net/",
								"awsDatabase": "co2impact"
							}
						}
					},
					{
						"name": "EP - Process SSAS",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DF_SatelliteDatas",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Azure Analysis Services - Process",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"SubscriptionId": "9caff34b-9c30-4dbb-8f87-b3816b522b9c",
								"ResourceGroup": "PowerSaturday",
								"Region": "northeurope",
								"ServerName": "powersat",
								"TSMLProcess": "{\"type\":\"full\"}",
								"DatabaseName": "PowerSat"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL to DL')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEach - Copy FULL",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@split(pipeline().parameters.TableListFull,',')",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy - Table",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.00:30:00",
										"retry": 3,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SQL_AdventureWork",
											"type": "DatasetReference",
											"parameters": {
												"table": {
													"value": "@item()",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ABFS_Raw",
											"type": "DatasetReference",
											"parameters": {
												"PathDate": {
													"value": "@pipeline().parameters.PathDate",
													"type": "Expression"
												},
												"TableName": {
													"value": "@item()",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "LKP - MaxDate",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderStoredProcedureName": "[[dbo].[CalculateLoadingLastDate]",
								"storedProcedureParameters": {
									"TableName": {
										"type": "String",
										"value": "Product"
									}
								},
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "DWH_paramLoadingLastDate",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Copy - Product - Delta",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "LKP - MaxDate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@CONCAT('select * from SalesLT.Product where ModifiedDate >= ', 'CAST(''' , activity('LKP - MaxDate').output.firstRow.MaxDate , ''' AS DateTime)')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SQL_AdventureWork",
								"type": "DatasetReference",
								"parameters": {
									"table": "Product"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ABFS_Raw",
								"type": "DatasetReference",
								"parameters": {
									"PathDate": {
										"value": "@pipeline().parameters.PathDate",
										"type": "Expression"
									},
									"TableName": "Product"
								}
							}
						]
					},
					{
						"name": "IF - Staging file not exist",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Copy - Product - Delta",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('LKP - MaxDate').output.firstRow.MaxDate, '1900-01-01T00:00:00')",
								"type": "Expression"
							},
							"ifTrueActivities": [
								{
									"name": "COPY - Raw to Staging",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.00:30:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ParquetSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ABFS_Raw",
											"type": "DatasetReference",
											"parameters": {
												"PathDate": {
													"value": "@pipeline().parameters.PathDate",
													"type": "Expression"
												},
												"TableName": "Product"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ABFS_Staging",
											"type": "DatasetReference",
											"parameters": {
												"TableName": "Product"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "SP - Update_LoadingLastDate",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "IF - Staging file not exist",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[UpdateLoadingLastDate]",
							"storedProcedureParameters": {
								"MaxDate": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TableName": {
									"value": "Product",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SQL_PowerSat",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "DF_Product",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "SP - Update_LoadingLastDate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.00:30:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DF_Product_Delta",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"ProductDeltaAbfs": {
										"PathDate": {
											"value": "@pipeline().parameters.PathDate",
											"type": "Expression"
										}
									},
									"ProductFullAbfs": {},
									"DestProductFull": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"parameters": {
					"TableListFull": {
						"type": "string",
						"defaultValue": "SalesOrderDetail,SalesOrderHeader"
					},
					"PathDate": {
						"type": "string",
						"defaultValue": "2020/06/27"
					}
				},
				"folder": {
					"name": "Dataflow Meetup"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Global')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "EP - SQL to DL",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "SET - PathDate",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "SQL to DL",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"TableListFull": {
									"value": "@pipeline().parameters.TableListFull",
									"type": "Expression"
								},
								"PathDate": {
									"value": "@variables('PathDate')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "EP - DL to DWH",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "EP - SQL to DL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DL to DWH",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"PathDate": {
									"value": "@variables('PathDate')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "SET - PathDate",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "PathDate",
							"value": {
								"value": "@formatDateTime(utcnow(), 'yyyy/MM/dd')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "DL to DWH_11parallele",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "EP - DL to DWH",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DL to DWH_11parallele",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "DL to DWH_4parallele",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "DL to DWH_11parallele",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DL to DWH_4parallele",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"parameters": {
					"TableListFull": {
						"type": "string",
						"defaultValue": "Address,Customer,CustomerAddress,ProductCategory,ProductDescription,ProductModel,ProductModelProductDescription,SalesOrderDetail,SalesOrderHeader"
					}
				},
				"variables": {
					"PathDate": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Dataflow Meetup"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/SQL to DL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/10Min')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Generic SCD Type1",
							"type": "PipelineReference"
						},
						"parameters": {
							"tableName": "[parameters('10Min_properties_Generic SCD Type1_parameters_tableName')]"
						}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Minute",
						"interval": 5,
						"startTime": "2020-06-28T13:24:00.000Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Daily')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Master_Co2Impact",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 6,
						"startTime": "2020-06-18T21:40:00.000Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Master_Co2Impact')]"
			]
		}
	]
}