{
	"name": "AWS - PullS3",
	"properties": {
		"activities": [
			{
				"name": "Web - Vault - awsConnectionBody",
				"type": "WebActivity",
				"dependsOn": [],
				"policy": {
					"timeout": "0.00:01:00",
					"retry": 3,
					"retryIntervalInSeconds": 60,
					"secureOutput": true,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": {
						"value": "@concat(pipeline().parameters.KeyVaultUrl\n,'/secrets/S3ConnectionBody?api-version=7.0'\n)",
						"type": "Expression"
					},
					"method": "GET",
					"authentication": {
						"type": "MSI",
						"resource": "https://vault.azure.net"
					}
				}
			},
			{
				"name": "LKP - S3 Files",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Web - Vault - awsConnectionBody",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Web - Get Bearer",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "HttpSource",
						"httpRequestTimeout": "00:01:40"
					},
					"dataset": {
						"referenceName": "HTTP_Glue_Catalog",
						"type": "DatasetReference",
						"parameters": {
							"awsConnectionBody": {
								"value": "@activity('Web - Vault - awsConnectionBody').output.value",
								"type": "Expression"
							},
							"bearer": {
								"value": "@activity('WEB - Get Bearer').output.Response",
								"type": "Expression"
							},
							"awsDatabase": {
								"value": "@pipeline().parameters.awsDatabase",
								"type": "Expression"
							}
						}
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Web - Get Bearer",
				"type": "WebActivity",
				"dependsOn": [],
				"policy": {
					"timeout": "0.00:01:00",
					"retry": 3,
					"retryIntervalInSeconds": 60,
					"secureOutput": true,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"url": "https://powersaturdayazf.azurewebsites.net/api/GetBearerFromMSI/c6beb898-053a-4bd7-aaf2-bf0a38440568",
					"method": "GET",
					"authentication": {
						"type": "MSI",
						"resource": "c6beb898-053a-4bd7-aaf2-bf0a38440568"
					}
				}
			},
			{
				"name": "ForEach - Tables",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "LKP - S3 Files",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('LKP - S3 Files').output.Value",
						"type": "Expression"
					},
					"isSequential": false,
					"activities": [
						{
							"name": "Copy - AWS - Azure",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": true
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "ParquetSource",
									"storeSettings": {
										"type": "AmazonS3ReadSettings",
										"recursive": true,
										"wildcardFolderPath": {
											"value": "@{replace(\nitem().StorageDescriptor.Location\n,concat('s3://'\n\t\t,split(\n\t\t\treplace(item().StorageDescriptor.Location,'s3://','')\n\t\t\t,'/')[0]\n\t\t)\n,'')}",
											"type": "Expression"
										},
										"wildcardFileName": "*",
										"enablePartitionDiscovery": false
									}
								},
								"sink": {
									"type": "AzureSqlSink",
									"preCopyScript": {
										"value": "@{concat('IF(OBJECT_ID(''dbo.'\n,item().name\n,''') IS NOT NULL)\nBEGIN\n\tTRUNCATE TABLE [dbo].['\n,item().name\n,'] END'\n)}",
										"type": "Expression"
									},
									"tableOption": "autoCreate",
									"disableMetricsCollection": false
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "S3_Parquet",
									"type": "DatasetReference",
									"parameters": {
										"S3Bucket": {
											"value": "@split(\nreplace(item().StorageDescriptor.Location,'s3://','')\n,'/')[0]",
											"type": "Expression"
										},
										"S3Path": {
											"value": "@replace(\nitem().StorageDescriptor.Location\n,concat('s3://'\n\t\t,split(\n\t\t\treplace(item().StorageDescriptor.Location,'s3://','')\n\t\t\t,'/')[0]\n\t\t)\n,'')",
											"type": "Expression"
										},
										"S3AccessKeyId": {
											"value": "@json(activity('Web - Vault - awsConnectionBody').output.value).awsAccessKeyId",
											"type": "Expression"
										},
										"S3SecretAccessKey": {
											"value": "@json(activity('Web - Vault - awsConnectionBody').output.value).awsSecretAccessKey",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "SQL_Generic",
									"type": "DatasetReference",
									"parameters": {
										"TableName": {
											"value": "@item().name",
											"type": "Expression"
										},
										"TableSchema": "dbo"
									}
								}
							]
						}
					]
				}
			}
		],
		"parameters": {
			"KeyVaultUrl": {
				"type": "string",
				"defaultValue": "https://powersaturdayakv.vault.azure.net/"
			},
			"awsDatabase": {
				"type": "string",
				"defaultValue": "co2impact"
			}
		},
		"variables": {
			"test": {
				"type": "String"
			}
		},
		"annotations": []
	}
}