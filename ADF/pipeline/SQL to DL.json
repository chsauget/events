{
	"name": "SQL to DL",
	"properties": {
		"activities": [
			{
				"name": "ForEach - Copy FULL",
				"type": "ForEach",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@pipeline().parameters.TableListFull",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Copy - Table",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.00:30:00",
								"retry": 3,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"queryTimeout": "02:00:00"
								},
								"sink": {
									"type": "ParquetSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "SQL_AdventureWork",
									"type": "DatasetReference",
									"parameters": {
										"table": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "ABFS_Raw",
									"type": "DatasetReference",
									"parameters": {
										"PathDate": {
											"value": "@pipeline().parameters.PathDate",
											"type": "Expression"
										},
										"TableName": {
											"value": "@item()",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "LKP - MaxDate",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.00:30:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[dbo].[CalculateLoadingLastDate]",
						"storedProcedureParameters": {
							"TableName": {
								"type": "String",
								"value": "Product"
							}
						},
						"queryTimeout": "02:00:00"
					},
					"dataset": {
						"referenceName": "DWH_paramLoadingLastDate",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Copy - Product - Delta",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "LKP - MaxDate",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.00:30:00",
					"retry": 3,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "@CONCAT('select * from Product where ModifiedDate >= ', 'CAST(''' , activity('LKP - MaxDate').output.firstRow.MaxDate , ''' AS DateTime)')",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00"
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "SQL_AdventureWork",
						"type": "DatasetReference",
						"parameters": {
							"table": "Product"
						}
					}
				],
				"outputs": [
					{
						"referenceName": "ABFS_Raw",
						"type": "DatasetReference",
						"parameters": {
							"PathDate": {
								"value": "@variables('PathDate')",
								"type": "Expression"
							},
							"TableName": "Product"
						}
					}
				]
			},
			{
				"name": "IF - Staging file not exist",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Copy - Product - Delta",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(activity('LKP - MaxDate').output.firstRow.MaxDate, '1900-01-01T00:00:00')",
						"type": "Expression"
					},
					"ifTrueActivities": [
						{
							"name": "COPY - Raw to Staging",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.00:30:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "ParquetSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": true
									}
								},
								"sink": {
									"type": "ParquetSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "ABFS_Raw",
									"type": "DatasetReference",
									"parameters": {
										"PathDate": {
											"value": "@pipeline().parameters.PathDate",
											"type": "Expression"
										},
										"TableName": "Product"
									}
								}
							],
							"outputs": [
								{
									"referenceName": "ABFS_Staging",
									"type": "DatasetReference",
									"parameters": {
										"TableName": "Product"
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "SP - Update_LoadingLastDate",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "IF - Staging file not exist",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.00:30:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[UpdateLoadingLastDate]",
					"storedProcedureParameters": {
						"MaxDate": {
							"value": {
								"value": "@pipeline().TriggerTime",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"TableName": {
							"value": "Product",
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "SQL_PowerSat",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "DF_Product",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "SP - Update_LoadingLastDate",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.00:30:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "DF_Product_Delta",
						"type": "DataFlowReference",
						"datasetParameters": {
							"ProductDeltaAbfs": {
								"PathDate": {
									"value": "@variables('PathDate')",
									"type": "Expression"
								}
							},
							"ProductFullAbfs": {
								"TableName": {
									"value": "@variables('PathDate')",
									"type": "Expression"
								}
							},
							"DestProductFull": {
								"TableName": {
									"value": "@variables('PathDate')",
									"type": "Expression"
								}
							}
						}
					},
					"compute": {
						"coreCount": 8,
						"computeType": "General"
					}
				}
			}
		],
		"parameters": {
			"TableListFull": {
				"type": "array",
				"defaultValue": [
					"SalesOrderDetail",
					"SalesOrderHeader"
				]
			},
			"PathDate": {
				"type": "string",
				"defaultValue": "2020/06/27"
			}
		},
		"folder": {
			"name": "Dataflow Meetup"
		},
		"annotations": []
	}
}