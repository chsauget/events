{
	"name": "DF_Product_Delta",
	"properties": {
		"folder": {
			"name": "Dataflow Meetup"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ABFS_Product_Delta",
						"type": "DatasetReference"
					},
					"name": "ProductDeltaAbfs"
				},
				{
					"dataset": {
						"referenceName": "ABFS_Product_Full",
						"type": "DatasetReference"
					},
					"name": "ProductFullAbfs"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ABFS_Product_Full",
						"type": "DatasetReference"
					},
					"name": "DestProductFull"
				}
			],
			"transformations": [
				{
					"name": "DerFileNameDelta"
				},
				{
					"name": "DerFileNameFull"
				},
				{
					"name": "UnionProduct"
				},
				{
					"name": "WindowSort"
				},
				{
					"name": "FilterNewRows"
				},
				{
					"name": "AlterRow"
				}
			],
			"script": "source(output(\n\t\tProductID as integer,\n\t\tName as string,\n\t\tProductNumber as string,\n\t\tColor as string,\n\t\tStandardCost as decimal(19,4),\n\t\tListPrice as decimal(19,4),\n\t\tSize as string,\n\t\tWeight as decimal(8,2),\n\t\tProductCategoryID as integer,\n\t\tProductModelID as integer,\n\t\tSellStartDate as timestamp,\n\t\tSellEndDate as timestamp,\n\t\tDiscontinuedDate as timestamp,\n\t\tThumbNailPhoto as binary,\n\t\tThumbnailPhotoFileName as string,\n\t\trowguid as string,\n\t\tModifiedDate as timestamp\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\trowUrlColumn: 'Path',\n\tformat: 'parquet') ~> ProductDeltaAbfs\nsource(output(\n\t\tProductID as integer,\n\t\tName as string,\n\t\tProductNumber as string,\n\t\tColor as string,\n\t\tStandardCost as decimal(19,4),\n\t\tListPrice as decimal(19,4),\n\t\tSize as string,\n\t\tWeight as decimal(8,2),\n\t\tProductCategoryID as integer,\n\t\tProductModelID as integer,\n\t\tSellStartDate as timestamp,\n\t\tSellEndDate as timestamp,\n\t\tDiscontinuedDate as timestamp,\n\t\tThumbNailPhoto as binary,\n\t\tThumbnailPhotoFileName as string,\n\t\trowguid as string,\n\t\tModifiedDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\trowUrlColumn: 'Path',\n\tformat: 'parquet') ~> ProductFullAbfs\nProductDeltaAbfs derive(FileName = regexExtract(Path, `([^/]+)(?=\\.\\w)`)) ~> DerFileNameDelta\nProductFullAbfs derive(FileName = regexExtract(Path, `([^/]+)(?=\\.\\w)`)) ~> DerFileNameFull\nDerFileNameDelta, DerFileNameFull union(byName: true)~> UnionProduct\nUnionProduct window(over(FileName = UnionProduct@FileName,\n\t\tProductID),\n\tdesc(ModifiedDate, true),\n\trank = rowNumber()) ~> WindowSort\nWindowSort filter(rank == 1) ~> FilterNewRows\nFilterNewRows alterRow(insertIf(true())) ~> AlterRow\nAlterRow sink(input(\n\t\tProductID as integer,\n\t\tName as string,\n\t\tProductNumber as string,\n\t\tColor as string,\n\t\tStandardCost as decimal(19,4),\n\t\tListPrice as decimal(19,4),\n\t\tSize as string,\n\t\tWeight as decimal(8,2),\n\t\tProductCategoryID as integer,\n\t\tProductModelID as integer,\n\t\tSellStartDate as timestamp,\n\t\tSellEndDate as timestamp,\n\t\tDiscontinuedDate as timestamp,\n\t\tThumbNailPhoto as binary,\n\t\tThumbnailPhotoFileName as string,\n\t\trowguid as string,\n\t\tModifiedDate as timestamp\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tmapColumn(\n\t\tProductID,\n\t\tName,\n\t\tProductNumber,\n\t\tColor,\n\t\tStandardCost,\n\t\tListPrice,\n\t\tSize,\n\t\tWeight,\n\t\tProductCategoryID,\n\t\tProductModelID,\n\t\tSellStartDate,\n\t\tSellEndDate,\n\t\tDiscontinuedDate,\n\t\trowguid,\n\t\tModifiedDate,\n\t\tPath,\n\t\tFileName,\n\t\trank\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DestProductFull"
		}
	}
}